@import '../index.scss';

ion-note {
  font-size: smaller;
}

@mixin set-styles($background-color: primary, $text-color: null) {
  // button.days-btn ion-note {
  //   color: bindColors($background-color);
  // }
  $color: $text-color;
  @if not $color {
    $color: map-get($textcolor, $background-color);
  }

  .days {

    .last-month-day,
    .next-month-day {
      color: var(--color, #000);

      &[disabled] p {
        opacity: .165;
      }

      p {
        opacity: .35;
      }

    }

    .today p {
      font-weight: 700;
    }

    .today,
    .marked {
      color: bindColors($background-color);
      border: 1px solid bindColors($background-color);

      &.on-selected p {
        color: $color;
      }
    }

    .on-selected {
      color: $color;
      background-color: bindColors($background-color);

      p {
        color: $color;
        opacity: 1;
      }
    }
  }

  .startSelection,
  .endSelection {
    position: relative;

    button.days-btn {
      color: $color;
      background-color: bindColors($background-color);
      border-radius: 50%;
    }

    &:before {
      background-color: bindColors($background-color);
    }

    &:after {
      background-color: $color;
      opacity: 0.25;
    }

    &:before,
    &:after {
      height: 36px;
      width: 50%;
      content: '';
      position: absolute;
      top: 0;
      // right: 0;
      display: block;
    }
  }

  .startSelection {

    &:before,
    &:after {
      right: 0;
    }
  }

  .endSelection {

    &:before,
    &:after {
      left: 0;
    }
  }

  // .endSelection button.days-btn p {
  //   color: #fff;
  // }
  .startSelection.endSelection:after {
    background-color: transparent;
  }

  .between {
    button.days-btn {
      background-color: bindColors($background-color);
      width: 100%;
      border-radius: 0;
      position: relative;

      p {
        color: $color;
      }

      &:after {
        height: 36px;
        width: 100%;
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        display: block;
        background-color: $color;
        opacity: 0.25;
      }
    }
  }

}

:host {
  display: inline-block;
  width: 100%;

  .days-box {
    padding: 0.5rem;
  }

  .days:nth-of-type(7n),
  .days:nth-of-type(7n + 1) {
    width: 15%;
  }

  .days {
    float: left;
    text-align: center;
    width: 14%;
    height: 36px;
    margin-bottom: 5px;

    .marked p {
      font-weight: bold;
    }

    .on-selected {
      border: none;

      p {
        font-weight: bold;
      }
    }
  }

  button.days-btn {
    display: block;
    margin: 0 auto;
    padding: 0;
    width: 36px;
    height: 36px;
    color: var(--color);
    border-radius: 50%;
    background-color: transparent;
    position: relative;
    z-index: 2;
    outline: 0;

    .today {
      border: 1px solid #000;
    }

    p {
      margin: 0;
      font-size: 1.2em;
      // color: #333;
      text-align: center;
    }

    &[disabled] p {
      // color: rgba(0, 0, 0, 0.3);
      color: var(--color, #000);
      opacity: 0.165;
    }

    &.on-selected ion-note {
      transition: bottom 0.3s;
      bottom: -14px;
    }

    ion-note {
      overflow: hidden;
      display: block;
      left: 0;
      right: 0;
      bottom: -5px;
      position: absolute;
      z-index: 1;
      text-align: center;
      font-weight: 200;
    }

    &.is-last,
    .days.startSelection:nth-child(7n):before,
    .days.between:nth-child(7n) button.days-btn,
    .startSelection.is-last-wrap::before,
    .startSelection.is-last-wrap::after {
      border-radius: 0 36px 36px 0;
    }

    &.is-first,
    .days.endSelection:nth-child(7n + 1):before,
    .days.between:nth-child(7n + 1) button.days-btn,
    .days.between.is-first-wrap button.days-btn.is-first,
    .endSelection.is-first-wrap::before,
    .endSelection.is-first-wrap::after {
      border-radius: 36px 0 0 36px;
    }
  }

  button.days-btn.is-first.on-selected,
  button.days-btn.is-last.on-selected,
  .days.startSelection:nth-child(7n):before.on-selected,
  .days.between:nth-child(7n) button.days-btn.on-selected,
  .startSelection button.days-btn.is-first,
  .startSelection button.days-btn.is-last,
  .endSelection button.days-btn.is-first,
  .endSelection button.days-btn.is-last {
    border-radius: 50%;
  }

  .startSelection,
  .endSelection,
  .between {
    button.days-btn {
      -webkit-transition-property: background-color;
      -moz-transition-property: background-color;
      -ms-transition-property: background-color;
      -o-transition-property: background-color;
      transition-property: background-color;
      -webkit-transition-duration: 180ms;
      -moz-transition-duration: 180ms;
      -ms-transition-duration: 180ms;
      -o-transition-duration: 180ms;
      transition-duration: 180ms;
      -webkit-transition-timing-function: ease-out;
      -moz-transition-timing-function: ease-out;
      -ms-transition-timing-function: ease-out;
      -o-transition-timing-function: ease-out;
      transition-timing-function: ease-out;
    }
  }

  .primary {
    @include set-styles(primary);

    .startSelection.endSelection::before {
      --ion-color-primary: transparent;
    }
  }

  .secondary {
    @include set-styles(secondary);

    .startSelection.endSelection::before {
      --ion-color-secondary: transparent;
    }
  }

  .tertiary {
    @include set-styles(tertiary);

    .startSelection.endSelection::before {
      --ion-color-tertiary: transparent;
    }
  }

  .success {
    @include set-styles(success);

    .startSelection.endSelection::before {
      --ion-color-success: transparent;
    }
  }

  .warning {
    @include set-styles(warning);

    .startSelection.endSelection::before {
      --ion-color-warning: transparent;
    }
  }

  .danger {
    @include set-styles(danger);

    .startSelection.endSelection::before {
      --ion-color-danger: transparent;
    }
  }

  .dark {
    @include set-styles(dark);

    .startSelection.endSelection::before {
      --ion-color-dark: transparent;
    }
  }

  .medium {
    @include set-styles(medium);

    .startSelection.endSelection::before {
      --ion-color-medium: transparent;
    }
  }

  .light {
    @include set-styles(light);

    .startSelection.endSelection::before {
      --ion-color-light: transparent;
    }
  }

  .custom {
    @include set-styles(custom);

    .startSelection.endSelection::before {
      --ion-color-custom: transparent;
    }
  }
}
