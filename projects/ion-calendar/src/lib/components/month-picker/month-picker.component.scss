@import '../index.scss';

@mixin month-picker($background-color: primary, $color: null) {
  .month-packer-item {
    &.this-month button {
      border: 1px solid bindColors($background-color);
    }

    &.active {
      button {
        background-color: bindColors($background-color);
        @if $color {
          color: $color;
        }
        @else {
          color: map-get($textcolor, $background-color)
        }
      }
    }
  }
}

:host {
  .month-packer-item {
    width: 25%;
    box-sizing: border-box;
    float: left;
    height: 50px;
    padding: 5px;

    button {
      border-radius: 36px;
      width: 100%;
      height: 100%;
      font-size: 0.9em;
      background-color: transparent;
      color: var(--color);
    }
  }

  .month-picker {
    margin: 20px 0;
    display: inline-block;
    width: 100%;

    &.primary {
      @include month-picker(primary, var(--ion-color-primary-contrast));
    }

    &.secondary {
      @include month-picker(secondary, var(--ion-color-secondary-contrast));
    }

    &.tertiary {
      @include month-picker(tertiary, var(--ion-color-tertiary-contrast));
    }

    &.success {
      @include month-picker(success, var(--ion-color-success-contrast));
    }

    &.warning {
      @include month-picker(warning, var(--ion-color-warning-contrast));
    }

    &.danger {
      @include month-picker(danger, var(--ion-color-danger-contrast));
    }

    &.dark {
      @include month-picker(dark, var(--ion-color-dark-contrast));
    }

    &.medium {
      @include month-picker(medium, var(--ion-color-medium-contrast));
    }

    &.light {
      @include month-picker(light, var(--ion-color-light-contrast));
    }

    &.custom {
      @include month-picker(custom, var(--ion-color-custom-contrast));
    }

    &.transparent {
      @include month-picker(transparent, #000);
    }
  }
}
